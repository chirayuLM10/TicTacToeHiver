{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require = require(\"../helpers/form-controls\"),\n    getLabelsForLabelable = _require.getLabelsForLabelable;\n\nvar _require2 = require(\"../helpers/strings\"),\n    parseFloatingPointNumber = _require2.parseFloatingPointNumber;\n\nvar HTMLProgressElementImpl =\n/*#__PURE__*/\nfunction (_HTMLElementImpl) {\n  _inherits(HTMLProgressElementImpl, _HTMLElementImpl);\n\n  function HTMLProgressElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLProgressElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HTMLProgressElementImpl).call(this, args, privateData));\n    _this._labels = null;\n    return _this;\n  }\n\n  _createClass(HTMLProgressElementImpl, [{\n    key: \"value\",\n    get: function get() {\n      var parsedValue = parseFloatingPointNumber(this.getAttribute(\"value\"));\n\n      if (!isNaN(parsedValue) && parsedValue > 0) {\n        return parsedValue > this.max ? this.max : parsedValue;\n      }\n\n      return 0;\n    },\n    set: function set(value) {\n      this.setAttribute(\"value\", value);\n    }\n  }, {\n    key: \"max\",\n    get: function get() {\n      var parsedMax = parseFloatingPointNumber(this.getAttribute(\"max\"));\n\n      if (!isNaN(parsedMax) && parsedMax > 0) {\n        return parsedMax;\n      }\n\n      return 1.0;\n    },\n    set: function set(value) {\n      this.setAttribute(\"max\", value);\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      if (!this.hasAttribute(\"value\")) {\n        return -1;\n      }\n\n      return this.value / this.max;\n    }\n  }, {\n    key: \"labels\",\n    get: function get() {\n      return getLabelsForLabelable(this);\n    }\n  }]);\n\n  return HTMLProgressElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}