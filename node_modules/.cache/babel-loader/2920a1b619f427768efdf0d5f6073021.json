{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertStorageEventInit = require(\"./StorageEventInit.js\").convert;\n\nvar convertStorage = require(\"./Storage.js\").convert;\n\nvar impl = utils.implSymbol;\n\nvar Event = require(\"./Event.js\");\n\nvar StorageEvent =\n/*#__PURE__*/\nfunction (_Event$interface) {\n  _inherits(StorageEvent, _Event$interface);\n\n  function StorageEvent(type) {\n    var _this;\n\n    _classCallCheck(this, StorageEvent);\n\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'StorageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n\n    var args = [];\n    {\n      var curArg = arguments[0];\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'StorageEvent': parameter 1\"\n      });\n      args.push(curArg);\n    }\n    {\n      var _curArg = arguments[1];\n      _curArg = convertStorageEventInit(_curArg, {\n        context: \"Failed to construct 'StorageEvent': parameter 2\"\n      });\n      args.push(_curArg);\n    }\n    return _possibleConstructorReturn(_this, iface.setup(Object.create((this instanceof StorageEvent ? this.constructor : void 0).prototype), args));\n  }\n\n  _createClass(StorageEvent, [{\n    key: \"initStorageEvent\",\n    value: function initStorageEvent(type) {\n      var _this$impl;\n\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'initStorageEvent' on 'StorageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        var _curArg2 = arguments[1];\n\n        if (_curArg2 !== undefined) {\n          _curArg2 = conversions[\"boolean\"](_curArg2, {\n            context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 2\"\n          });\n        } else {\n          _curArg2 = false;\n        }\n\n        args.push(_curArg2);\n      }\n      {\n        var _curArg3 = arguments[2];\n\n        if (_curArg3 !== undefined) {\n          _curArg3 = conversions[\"boolean\"](_curArg3, {\n            context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 3\"\n          });\n        } else {\n          _curArg3 = false;\n        }\n\n        args.push(_curArg3);\n      }\n      {\n        var _curArg4 = arguments[3];\n\n        if (_curArg4 !== undefined) {\n          if (_curArg4 === null || _curArg4 === undefined) {\n            _curArg4 = null;\n          } else {\n            _curArg4 = conversions[\"DOMString\"](_curArg4, {\n              context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 4\"\n            });\n          }\n        } else {\n          _curArg4 = null;\n        }\n\n        args.push(_curArg4);\n      }\n      {\n        var _curArg5 = arguments[4];\n\n        if (_curArg5 !== undefined) {\n          if (_curArg5 === null || _curArg5 === undefined) {\n            _curArg5 = null;\n          } else {\n            _curArg5 = conversions[\"DOMString\"](_curArg5, {\n              context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 5\"\n            });\n          }\n        } else {\n          _curArg5 = null;\n        }\n\n        args.push(_curArg5);\n      }\n      {\n        var _curArg6 = arguments[5];\n\n        if (_curArg6 !== undefined) {\n          if (_curArg6 === null || _curArg6 === undefined) {\n            _curArg6 = null;\n          } else {\n            _curArg6 = conversions[\"DOMString\"](_curArg6, {\n              context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 6\"\n            });\n          }\n        } else {\n          _curArg6 = null;\n        }\n\n        args.push(_curArg6);\n      }\n      {\n        var _curArg7 = arguments[6];\n\n        if (_curArg7 !== undefined) {\n          _curArg7 = conversions[\"USVString\"](_curArg7, {\n            context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 7\"\n          });\n        } else {\n          _curArg7 = \"\";\n        }\n\n        args.push(_curArg7);\n      }\n      {\n        var _curArg8 = arguments[7];\n\n        if (_curArg8 !== undefined) {\n          if (_curArg8 === null || _curArg8 === undefined) {\n            _curArg8 = null;\n          } else {\n            _curArg8 = convertStorage(_curArg8, {\n              context: \"Failed to execute 'initStorageEvent' on 'StorageEvent': parameter 8\"\n            });\n          }\n        } else {\n          _curArg8 = null;\n        }\n\n        args.push(_curArg8);\n      }\n      return (_this$impl = this[impl]).initStorageEvent.apply(_this$impl, args);\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"key\"];\n    }\n  }, {\n    key: \"oldValue\",\n    get: function get() {\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"oldValue\"];\n    }\n  }, {\n    key: \"newValue\",\n    get: function get() {\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"newValue\"];\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return this[impl][\"url\"];\n    }\n  }, {\n    key: \"storageArea\",\n    get: function get() {\n      if (!this || !module.exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(this[impl][\"storageArea\"]);\n    }\n  }]);\n\n  return StorageEvent;\n}(Event.interface);\n\nObject.defineProperties(StorageEvent.prototype, _defineProperty({\n  initStorageEvent: {\n    enumerable: true\n  },\n  key: {\n    enumerable: true\n  },\n  oldValue: {\n    enumerable: true\n  },\n  newValue: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  storageArea: {\n    enumerable: true\n  }\n}, Symbol.toStringTag, {\n  value: \"StorageEvent\",\n  configurable: true\n}));\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = module.exports._mixedIntoPredicates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var isMixedInto = _step.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = module.exports._mixedIntoPredicates[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'StorageEvent'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(StorageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(StorageEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: StorageEvent,\n  expose: {\n    Window: {\n      StorageEvent: StorageEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../events/StorageEvent-impl.js\");","map":null,"metadata":{},"sourceType":"script"}