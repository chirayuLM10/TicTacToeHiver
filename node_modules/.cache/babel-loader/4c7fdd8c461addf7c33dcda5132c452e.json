{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/admin/Downloads/tictactoe-master/node_modules/@babel/runtime/helpers/inherits\");\n\nvar DOMTokenList = require(\"../generated/DOMTokenList\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar _require2 = require(\"../helpers/form-controls\"),\n    getLabelsForLabelable = _require2.getLabelsForLabelable,\n    formOwner = _require2.formOwner;\n\nvar HTMLOutputElementImpl =\n/*#__PURE__*/\nfunction (_HTMLElementImpl) {\n  _inherits(HTMLOutputElementImpl, _HTMLElementImpl);\n\n  function HTMLOutputElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLOutputElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HTMLOutputElementImpl).call(this, args, privateData));\n    _this._labels = null;\n    _this._defaultValue = \"\";\n    _this._valueMode = \"default\";\n    _this._customValidityErrorMessage = \"\";\n    return _this;\n  }\n\n  _createClass(HTMLOutputElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLOutputElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n\n      if (name === \"for\" && this._htmlFor !== undefined) {\n        this._htmlFor.attrModified();\n      }\n    }\n  }, {\n    key: \"_barredFromConstraintValidationSpecialization\",\n    value: function _barredFromConstraintValidationSpecialization() {\n      return true;\n    }\n  }, {\n    key: \"_formReset\",\n    value: function _formReset() {\n      if (this._valueMode === \"value\") {\n        this.textContent = this._defaultValue;\n      }\n\n      this._defaultValue = \"\";\n      this._valueMode = \"default\";\n    }\n  }, {\n    key: \"htmlFor\",\n    get: function get() {\n      if (this._htmlFor === undefined) {\n        this._htmlFor = DOMTokenList.createImpl([], {\n          element: this,\n          attributeLocalName: \"for\"\n        });\n      }\n\n      return this._htmlFor;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"output\";\n    }\n  }, {\n    key: \"labels\",\n    get: function get() {\n      return getLabelsForLabelable(this);\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      return formOwner(this);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.textContent;\n    },\n    set: function set(val) {\n      this._valueMode = \"value\";\n      this._defaultValue = this.textContent;\n      this.textContent = val;\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      return this._valueMode === \"default\" ? this.textContent : this._defaultValue;\n    },\n    set: function set(val) {\n      this._defaultValue = val;\n\n      if (this._valueMode === \"default\") {\n        this.textContent = val;\n      }\n    }\n  }]);\n\n  return HTMLOutputElementImpl;\n}(HTMLElementImpl);\n\nmixin(HTMLOutputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLOutputElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}